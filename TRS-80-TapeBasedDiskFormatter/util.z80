;-----------------------------------------------------------------------------
; Tape-based Floppy Disk Formatter
; TRS-80 Model III 16K or more with FDC
; Assembles with zmac (http://48k.ca/zmac.html)
;-----------------------------------------------------------------------------
; This software is in the public domain.  No warranty expressed nor implied.
;-----------------------------------------------------------------------------
; 2021-03-25 A. Chana       Initial Release
;-----------------------------------------------------------------------------

hextable:       db      '0123456789ABCDEF'

;-----------------------------------------------------------------------------
; print a register in hex with ' ' prefix
;-----------------------------------------------------------------------------
; call:     A contains value to print
; return:   A destroyed
;-----------------------------------------------------------------------------
printhexsp:
                push    af
                ld      a,' '
                call    vdchar
                pop     af
                jr      printhex

;-----------------------------------------------------------------------------
; print a register in C hex with '0x' prefix
;-----------------------------------------------------------------------------
; call:     A contains value to print
; return:   A destroyed
;-----------------------------------------------------------------------------
printhexc:
                push    af
                ld      a,'0'
                call    vdchar
                ld      a,'x'
                call    vdchar
                pop     af
                jr      printhex

;-----------------------------------------------------------------------------
; print a register in C hex with ' ' prefix
;-----------------------------------------------------------------------------
; call:     A contains value to print
; return:   A destroyed
;-----------------------------------------------------------------------------
printhexspc:
                push    af
                ld      a,' '
                call    vdchar
                ld      a,'0'
                call    vdchar
                ld      a,'x'
                call    vdchar
                pop     af
                jr      printhex

;-----------------------------------------------------------------------------
; print a register in hex
;-----------------------------------------------------------------------------
; call:     A contains value to print
; return:   A destroyed
;-----------------------------------------------------------------------------
printhex:
                push    hl
                push    bc
                push    de

                ld      c,a

                ld      hl,hextable
                srl     a
                srl     a
                srl     a
                srl     a
                ld      d,0
                ld      e,a
                add     hl,de
                ld      a,(hl)
                call    vdchar

                ld      a,c
                ld      hl,hextable
                and     0x0f
                ld      d,0
                ld      e,a
                add     hl,de
                ld      a,(hl)
                call    vdchar

                pop     de
                pop     bc
                pop     hl
                ret

;-----------------------------------------------------------------------------
; print a register in binary
;-----------------------------------------------------------------------------
; call:     A contains value to print
; return:   A destroyed
;-----------------------------------------------------------------------------
printbin:       push    hl
                push    bc
                push    de

                ld      c,a

                ld      a,'['
                call    vdchar

                ld      b,8
pbloop:         ld      a,c
                rlc     a
                jr      c,printone
                ld      c,a
                ld      a,'0'
                jr      pbprint
printone:       ld      c,a
                ld      a,'1'
pbprint:        call    vdchar
                djnz    pbloop

                ld      a,']'
                call    vdchar

                pop     de
                pop     bc
                pop     hl
                ret

;-----------------------------------------------------------------------------
; parse an unsigned 16-bit integer from a string
;-----------------------------------------------------------------------------
; call:     DE points to string terminated with 0dh or non-numeric character
; return:   HL contains parsed integer, A destroyed
;-----------------------------------------------------------------------------
parse_uint:     push    bc
                ld      hl,0
parse_uint01:   ld      a,(de)
                sub     30h
                cp      10
                jr      nc,parse_uint02
                cp      0
                jr      c,parse_uint02
                inc     de
                ld      b,h
                ld      c,l
                add     hl,hl
                add     hl,hl
                add     hl,bc
                add     hl,hl
                add     a,l
                ld      l,a
                jr      nc,parse_uint01
                inc     h
                jr      parse_uint01
parse_uint02:   pop     bc
                ret
